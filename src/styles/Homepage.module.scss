@use "variables";

$min-btn-radius: 15rem;
$max-btn-radius: 20rem;

.hp {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3rem;
}

.headline {
    margin: 0;
    font-size: 4rem;
    overflow-wrap: break-word;
}

// basically match tg font to regular font size
.tg-font {
    font-size: 1.25em;
}

// emphasize tg font
.tg-font-emph {
    font-size: 1.5em;
    overflow-wrap: break-word;
}

.features {
    list-style: none;
    text-transform: uppercase;
    font-size: 1em;
}

.features-item {
    width: fit-content;
    margin: 0.25rem 0;
    padding: 0 0.25rem;
    border-image-source: linear-gradient(to bottom, black 0%, white 100%);
    border-image-slice: 1;
    border-left: 2px solid;
    background: linear-gradient(to left, transparent 50%, grey 50%) right;
    background-size: 200%;
    transition: all 3s ease;

    &:hover {
        background-position: left;
        color: white;
        transition: all 0.75s ease;
    }
}

.btn {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: clamp($min-btn-radius, 80vw, $max-btn-radius);
    height: clamp($min-btn-radius, 80vw, $max-btn-radius);
    border-radius: clamp($min-btn-radius, 80vw, $max-btn-radius);
    padding: 5rem;
    color: black;
    background: radial-gradient(50% 50% at 50% 50%, rgba(255, 255, 255, 0.66) 77.6%, #55C2FF 100%);
    font-size: 1.5rem;
    text-transform: uppercase;
    text-align: center;
    animation: 4s ease-in-out infinite alternate up-n-down;

    &:hover {
        animation-play-state: paused;
    }
}

@keyframes up-n-down {
    from {
        transform: translateY(-1rem);
        // background-position: 0 0;
    }

    to {
        transform: translateY(1rem);
        // background-position: 100rem 100rem;
    }
}